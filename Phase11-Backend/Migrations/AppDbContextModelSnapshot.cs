// <auto-generated />
using InvertedIndex.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Phase11_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvertedIndex.Data.Entities.Doc", b =>
                {
                    b.Property<string>("DocID")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("DocID");

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("InvertedIndex.Data.Entities.DocWordAssign", b =>
                {
                    b.Property<int>("DocWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocID")
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("WordID")
                        .HasColumnType("int");

                    b.HasKey("DocWordID");

                    b.HasIndex("DocID");

                    b.HasIndex("WordID");

                    b.ToTable("DocWordsAssigns");
                });

            modelBuilder.Entity("InvertedIndex.Data.Entities.Word", b =>
                {
                    b.Property<int>("WordID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WordID");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("InvertedIndex.Data.Entities.DocWordAssign", b =>
                {
                    b.HasOne("InvertedIndex.Data.Entities.Doc", "Doc")
                        .WithMany("DocWordAssigns")
                        .HasForeignKey("DocID");

                    b.HasOne("InvertedIndex.Data.Entities.Word", "Word")
                        .WithMany("DocWordAssigns")
                        .HasForeignKey("WordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doc");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("InvertedIndex.Data.Entities.Doc", b =>
                {
                    b.Navigation("DocWordAssigns");
                });

            modelBuilder.Entity("InvertedIndex.Data.Entities.Word", b =>
                {
                    b.Navigation("DocWordAssigns");
                });
#pragma warning restore 612, 618
        }
    }
}
